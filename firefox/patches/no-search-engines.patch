diff --git a/browser/components/urlbar/UrlbarProviderInterventions.sys.mjs b/browser/components/urlbar/UrlbarProviderInterventions.sys.mjs
index 22489ff66a8a..431d4fee3cd4 100644
--- a/browser/components/urlbar/UrlbarProviderInterventions.sys.mjs
+++ b/browser/components/urlbar/UrlbarProviderInterventions.sys.mjs
@@ -488,7 +488,7 @@ class ProviderInterventions extends UrlbarProvider {
    * @param {UrlbarQueryContext} queryContext The query context object
    */
   async isActive(queryContext) {
-    if (
+    if (true ||
       !queryContext.searchString ||
       queryContext.searchString.length > UrlbarUtils.MAX_TEXT_LENGTH ||
       lazy.UrlbarTokenizer.REGEXP_LIKE_PROTOCOL.test(
diff --git a/toolkit/components/search/SearchEngineSelector.sys.mjs b/toolkit/components/search/SearchEngineSelector.sys.mjs
index ee32b05d723a..6c0ab03739a6 100644
--- a/toolkit/components/search/SearchEngineSelector.sys.mjs
+++ b/toolkit/components/search/SearchEngineSelector.sys.mjs
@@ -207,6 +207,36 @@ export class SearchEngineSelector {
    *   could be obtained.
    */
   async _getConfiguration(firstTime = true) {
+    if (true) {
+      return [
+        {
+          "recordType": "engine",
+          "identifier": "dummy",
+          "base": {
+            "name": "Dummy",
+            "classification": "general",
+            "urls": {
+              "search": {
+                "base": "https://example.com/search",
+                "searchTermParamName": "q"
+              }
+            }
+          },
+          "variants": [{
+            "environment": { "allRegionsAndLocales": true }
+          }]
+        },
+        {
+          "recordType": "defaultEngines",
+          "globalDefault": "dummy",
+          "specificDefaults": []
+        },
+        {
+          "recordType": "engineOrders",
+          "orders": []
+        }
+      ];
+    }
     let result = [];
     let failed = false;
     try {
